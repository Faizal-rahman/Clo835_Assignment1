{"filter":false,"title":"main.tf","tooltip":"/main.tf","undoManager":{"mark":36,"position":36,"stack":[[{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["# Define the AWS provider","provider \"aws\" {","  region = \"us-east-1\"  # Replace with your desired AWS region","}","","# Get the default VPC","data \"aws_vpc\" \"default\" {","  default = true","}","","# Get the default subnet in the default VPC","data \"aws_subnet_ids\" \"default\" {","  vpc_id = data.aws_vpc.default.id","}","","# Security Group to allow inbound SSH traffic","resource \"aws_security_group\" \"allow_ssh\" {","  name        = \"allow_ssh\"","  description = \"Allow inbound SSH traffic\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to more secure IPs in production)","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]","  }","}","","# Create EC2 instance in the default subnet","resource \"aws_instance\" \"example\" {","  ami           = \"ami-0c55b159cbfafe1f0\"  # Replace with a valid AMI ID for your region","  instance_type = \"t2.micro\"               # Choose your desired instance type","","  subnet_id     = data.aws_subnet_ids.default.ids[0]  # Use the first subnet in the default VPC","  security_groups = [aws_security_group.allow_ssh.name]  # Attach the SSH security group","","  tags = {","    Name = \"ExampleInstance\"","  }","}",""],"id":1}],[{"start":{"row":37,"column":19},"end":{"row":37,"column":40},"action":"remove","lines":["ami-0c55b159cbfafe1f0"],"id":2},{"start":{"row":37,"column":19},"end":{"row":37,"column":40},"action":"insert","lines":["ami-0c614dee691cbbf37"]}],[{"start":{"row":0,"column":0},"end":{"row":47,"column":0},"action":"remove","lines":["# Define the AWS provider","provider \"aws\" {","  region = \"us-east-1\"  # Replace with your desired AWS region","}","","# Get the default VPC","data \"aws_vpc\" \"default\" {","  default = true","}","","# Get the default subnet in the default VPC","data \"aws_subnet_ids\" \"default\" {","  vpc_id = data.aws_vpc.default.id","}","","# Security Group to allow inbound SSH traffic","resource \"aws_security_group\" \"allow_ssh\" {","  name        = \"allow_ssh\"","  description = \"Allow inbound SSH traffic\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to more secure IPs in production)","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]","  }","}","","# Create EC2 instance in the default subnet","resource \"aws_instance\" \"example\" {","  ami           = \"ami-0c614dee691cbbf37\"  # Replace with a valid AMI ID for your region","  instance_type = \"t2.micro\"               # Choose your desired instance type","","  subnet_id     = data.aws_subnet_ids.default.ids[0]  # Use the first subnet in the default VPC","  security_groups = [aws_security_group.allow_ssh.name]  # Attach the SSH security group","","  tags = {","    Name = \"ExampleInstance\"","  }","}",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["# Define the AWS provider","provider \"aws\" {","  region = \"us-east-1\"  # Replace with your desired AWS region","}","","# Get the default VPC","data \"aws_vpc\" \"default\" {","  default = true","}","","# Get the default subnet in the default VPC","data \"aws_subnet\" \"default\" {","  vpc_id = data.aws_vpc.default.id","  availability_zone = \"us-east-1a\"  # Replace with your availability zone if needed","}","","# Security Group to allow inbound SSH traffic","resource \"aws_security_group\" \"allow_ssh\" {","  name        = \"allow_ssh\"","  description = \"Allow inbound SSH traffic\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to more secure IPs in production)","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]","  }","}","","# Create EC2 instance in the default subnet","resource \"aws_instance\" \"example\" {","  ami           = \"ami-0c55b159cbfafe1f0\"  # Replace with a valid AMI ID for your region","  instance_type = \"t2.micro\"","","  subnet_id     = data.aws_subnet.default.id  # Using the default subnet's ID","  security_groups = [aws_security_group.allow_ssh.name]  # Attach the SSH security group","","  tags = {","    Name = \"ExampleInstance\"","  }","}",""]}],[{"start":{"row":38,"column":19},"end":{"row":38,"column":40},"action":"remove","lines":["ami-0c55b159cbfafe1f0"],"id":4},{"start":{"row":38,"column":19},"end":{"row":38,"column":40},"action":"insert","lines":["ami-0c614dee691cbbf37"]}],[{"start":{"row":37,"column":31},"end":{"row":37,"column":32},"action":"remove","lines":["e"],"id":5},{"start":{"row":37,"column":30},"end":{"row":37,"column":31},"action":"remove","lines":["l"]},{"start":{"row":37,"column":29},"end":{"row":37,"column":30},"action":"remove","lines":["p"]},{"start":{"row":37,"column":28},"end":{"row":37,"column":29},"action":"remove","lines":["m"]},{"start":{"row":37,"column":27},"end":{"row":37,"column":28},"action":"remove","lines":["a"]},{"start":{"row":37,"column":26},"end":{"row":37,"column":27},"action":"remove","lines":["x"]},{"start":{"row":37,"column":25},"end":{"row":37,"column":26},"action":"remove","lines":["e"]}],[{"start":{"row":37,"column":25},"end":{"row":37,"column":26},"action":"insert","lines":["E"],"id":6},{"start":{"row":37,"column":26},"end":{"row":37,"column":27},"action":"insert","lines":["C"]},{"start":{"row":37,"column":27},"end":{"row":37,"column":28},"action":"insert","lines":["2"]}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":26},"action":"remove","lines":["ExampleInstanc"],"id":7}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"remove","lines":["e"],"id":8}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["E"],"id":9},{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"insert","lines":["c"]},{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"insert","lines":["2"]}],[{"start":{"row":17,"column":0},"end":{"row":34,"column":1},"action":"remove","lines":["resource \"aws_security_group\" \"allow_ssh\" {","  name        = \"allow_ssh\"","  description = \"Allow inbound SSH traffic\"","","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to more secure IPs in production)","  }","","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"","    cidr_blocks = [\"0.0.0.0/0\"]","  }","}"],"id":11},{"start":{"row":17,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["resource \"aws_security_group\" \"docker_application_sg\" {","  name        = \"docker-application-sg\"","  description = \"Allow inbound SSH, HTTP (8080), and MySQL (3306) traffic for Docker applications\"","","  # Inbound rules (Ingress)","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to a more secure IP range in production)","    description = \"Allow SSH access\"","  }","","  ingress {","    from_port   = 8080","    to_port     = 8080","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow access to web application from anywhere","    description = \"Allow HTTP access to web app on port 8080\"","  }","","  ingress {","    from_port   = 3306","    to_port     = 3306","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # (or restrict this to EC2 itself for security)","    description = \"Allow MySQL access (consider restricting for security)\"","  }","","  # Outbound rules (Egress)","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"  # Allow all outbound traffic","    cidr_blocks = [\"0.0.0.0/0\"]","    description = \"Allow all outbound traffic\"","  }","}",""]}],[{"start":{"row":63,"column":34},"end":{"row":63,"column":50},"action":"remove","lines":["group.allow_ssh."],"id":12},{"start":{"row":63,"column":34},"end":{"row":63,"column":55},"action":"insert","lines":["docker_application_sg"]}],[{"start":{"row":63,"column":55},"end":{"row":63,"column":56},"action":"insert","lines":["."],"id":13}],[{"start":{"row":63,"column":34},"end":{"row":63,"column":35},"action":"insert","lines":["g"],"id":14},{"start":{"row":63,"column":35},"end":{"row":63,"column":36},"action":"insert","lines":["r"]},{"start":{"row":63,"column":36},"end":{"row":63,"column":37},"action":"insert","lines":["o"]},{"start":{"row":63,"column":37},"end":{"row":63,"column":38},"action":"insert","lines":["u"]},{"start":{"row":63,"column":38},"end":{"row":63,"column":39},"action":"insert","lines":["p"]},{"start":{"row":63,"column":39},"end":{"row":63,"column":40},"action":"insert","lines":["_"]}],[{"start":{"row":63,"column":39},"end":{"row":63,"column":40},"action":"remove","lines":["_"],"id":15},{"start":{"row":63,"column":38},"end":{"row":63,"column":39},"action":"remove","lines":["p"]},{"start":{"row":63,"column":37},"end":{"row":63,"column":38},"action":"remove","lines":["u"]},{"start":{"row":63,"column":36},"end":{"row":63,"column":37},"action":"remove","lines":["o"]},{"start":{"row":63,"column":35},"end":{"row":63,"column":36},"action":"remove","lines":["r"]},{"start":{"row":63,"column":34},"end":{"row":63,"column":35},"action":"remove","lines":["g"]}],[{"start":{"row":63,"column":34},"end":{"row":63,"column":35},"action":"insert","lines":["g"],"id":16},{"start":{"row":63,"column":35},"end":{"row":63,"column":36},"action":"insert","lines":["r"]},{"start":{"row":63,"column":36},"end":{"row":63,"column":37},"action":"insert","lines":["o"]},{"start":{"row":63,"column":37},"end":{"row":63,"column":38},"action":"insert","lines":["u"]},{"start":{"row":63,"column":38},"end":{"row":63,"column":39},"action":"insert","lines":["p"]},{"start":{"row":63,"column":39},"end":{"row":63,"column":40},"action":"insert","lines":["."]}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":17}],[{"start":{"row":16,"column":0},"end":{"row":20,"column":1},"action":"insert","lines":["# Adding SSH key to Amazon EC2","resource \"aws_key_pair\" \"web_key\" {","  key_name   = local.name_prefix","  public_key = file(\"sshkey.pub\")","}"],"id":18}],[{"start":{"row":20,"column":1},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":19}],[{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"remove","lines":["x"],"id":20},{"start":{"row":18,"column":30},"end":{"row":18,"column":31},"action":"remove","lines":["i"]},{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"remove","lines":["f"]},{"start":{"row":18,"column":28},"end":{"row":18,"column":29},"action":"remove","lines":["e"]},{"start":{"row":18,"column":27},"end":{"row":18,"column":28},"action":"remove","lines":["r"]},{"start":{"row":18,"column":26},"end":{"row":18,"column":27},"action":"remove","lines":["p"]},{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"remove","lines":["_"]},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"remove","lines":["e"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"remove","lines":["m"]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"remove","lines":["a"]},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":["n"]},{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"remove","lines":["."]},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"remove","lines":["l"]},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"remove","lines":["a"]}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["c"],"id":21},{"start":{"row":18,"column":16},"end":{"row":18,"column":17},"action":"remove","lines":["o"]},{"start":{"row":18,"column":15},"end":{"row":18,"column":16},"action":"remove","lines":["l"]}],[{"start":{"row":18,"column":15},"end":{"row":18,"column":16},"action":"insert","lines":["s"],"id":22},{"start":{"row":18,"column":16},"end":{"row":18,"column":17},"action":"insert","lines":["s"]},{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["h"]},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["k"]},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"insert","lines":["y"],"id":23},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["."]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"insert","lines":["p"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"insert","lines":["u"]},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"insert","lines":["b"]}],[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["\""],"id":24}],[{"start":{"row":18,"column":15},"end":{"row":18,"column":16},"action":"insert","lines":["\""],"id":25}],[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"remove","lines":["b"],"id":26},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"remove","lines":["u"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"remove","lines":["p"]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"remove","lines":["."]}],[{"start":{"row":60,"column":1},"end":{"row":61,"column":0},"action":"remove","lines":["",""],"id":27}],[{"start":{"row":68,"column":2},"end":{"row":68,"column":3},"action":"insert","lines":["v"],"id":28},{"start":{"row":68,"column":3},"end":{"row":68,"column":4},"action":"insert","lines":["p"]}],[{"start":{"row":68,"column":4},"end":{"row":68,"column":5},"action":"insert","lines":["c"],"id":29},{"start":{"row":68,"column":5},"end":{"row":68,"column":6},"action":"insert","lines":["_"]}],[{"start":{"row":68,"column":21},"end":{"row":68,"column":22},"action":"insert","lines":["-"],"id":30}],[{"start":{"row":68,"column":21},"end":{"row":68,"column":22},"action":"remove","lines":["-"],"id":31}],[{"start":{"row":68,"column":21},"end":{"row":68,"column":22},"action":"insert","lines":["_"],"id":32},{"start":{"row":68,"column":22},"end":{"row":68,"column":23},"action":"insert","lines":["i"]},{"start":{"row":68,"column":23},"end":{"row":68,"column":24},"action":"insert","lines":["d"]},{"start":{"row":68,"column":24},"end":{"row":68,"column":25},"action":"insert","lines":["s"]}],[{"start":{"row":68,"column":20},"end":{"row":68,"column":21},"action":"remove","lines":["s"],"id":33}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["# Define the AWS provider","provider \"aws\" {","  region = \"us-east-1\"  # Replace with your desired AWS region","}","","# Get the default VPC","data \"aws_vpc\" \"default\" {","  default = true","}","","# Get the default subnet in the default VPC","data \"aws_subnet\" \"default\" {","  vpc_id = data.aws_vpc.default.id","  availability_zone = \"us-east-1a\"  # Replace with your availability zone if needed","}","","# Adding SSH key to Amazon EC2","resource \"aws_key_pair\" \"web_key\" {","  key_name   = \"sshkey\"","  public_key = file(\"sshkey.pub\")","}","","# Security Group to allow inbound SSH traffic","resource \"aws_security_group\" \"docker_application_sg\" {","  name        = \"docker-application-sg\"","  description = \"Allow inbound SSH, HTTP (8080), and MySQL (3306) traffic for Docker applications\"","","  # Inbound rules (Ingress)","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to a more secure IP range in production)","    description = \"Allow SSH access\"","  }","","  ingress {","    from_port   = 8080","    to_port     = 8080","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow access to web application from anywhere","    description = \"Allow HTTP access to web app on port 8080\"","  }","","  ingress {","    from_port   = 3306","    to_port     = 3306","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # (or restrict this to EC2 itself for security)","    description = \"Allow MySQL access (consider restricting for security)\"","  }","","  # Outbound rules (Egress)","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"  # Allow all outbound traffic","    cidr_blocks = [\"0.0.0.0/0\"]","    description = \"Allow all outbound traffic\"","  }","}","","# Create EC2 instance in the default subnet","resource \"aws_instance\" \"EC2\" {","  ami           = \"ami-0c614dee691cbbf37\"  # Replace with a valid AMI ID for your region","  instance_type = \"t2.micro\"","","  subnet_id     = data.aws_subnet.default.id  # Using the default subnet's ID","  vpc_security_group_ids = [aws_security_group.docker_application_sg.name]  # Attach the SSH security group","","  tags = {","    Name = \"Ec2\"","  }","}",""],"id":34},{"start":{"row":0,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["# Define the AWS provider","provider \"aws\" {","  region = \"us-east-1\"  # Replace with your desired AWS region","}","","# Get the default VPC","data \"aws_vpc\" \"default\" {","  default = true","}","","# Get the default subnet in the default VPC","data \"aws_subnet\" \"default\" {","  vpc_id            = data.aws_vpc.default.id","  availability_zone = \"us-east-1a\"  # Replace with your availability zone if needed","}","","# Adding SSH key to Amazon EC2","resource \"aws_key_pair\" \"web_key\" {","  key_name   = \"sshkey\"","  public_key = file(\"sshkey.pub\")","}","","# Security Group to allow inbound SSH traffic","resource \"aws_security_group\" \"docker_application_sg\" {","  name        = \"docker-application-sg\"","  description = \"Allow inbound SSH, HTTP (8080), and MySQL (3306) traffic for Docker applications\"","","  # Inbound rules (Ingress)","  ingress {","    from_port   = 22","    to_port     = 22","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Open to all IPs (change to a more secure IP range in production)","    description = \"Allow SSH access\"","  }","","  ingress {","    from_port   = 8080","    to_port     = 8080","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # Allow access to web application from anywhere","    description = \"Allow HTTP access to web app on port 8080\"","  }","","  ingress {","    from_port   = 3306","    to_port     = 3306","    protocol    = \"tcp\"","    cidr_blocks = [\"0.0.0.0/0\"]  # (or restrict this to EC2 itself for security)","    description = \"Allow MySQL access (consider restricting for security)\"","  }","","  # Outbound rules (Egress)","  egress {","    from_port   = 0","    to_port     = 0","    protocol    = \"-1\"  # Allow all outbound traffic","    cidr_blocks = [\"0.0.0.0/0\"]","    description = \"Allow all outbound traffic\"","  }","}","","# Create EC2 instance in the default subnet","resource \"aws_instance\" \"EC2\" {","  ami           = \"ami-0c614dee691cbbf37\"  # Replace with a valid AMI ID for your region","  instance_type = \"t2.micro\"","","  subnet_id            = data.aws_subnet.default.id  # Using the default subnet's ID","  vpc_security_group_ids = [aws_security_group.docker_application_sg.id]  # Attach the security group by ID","","  key_name             = aws_key_pair.web_key.key_name  # Use the generated key pair","","  tags = {","    Name = \"Ec2\"","  }","}",""]}],[{"start":{"row":76,"column":0},"end":{"row":76,"column":2},"action":"insert","lines":["''"],"id":35}],[{"start":{"row":76,"column":0},"end":{"row":76,"column":2},"action":"remove","lines":["''"],"id":36}],[{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":37}],[{"start":{"row":77,"column":0},"end":{"row":94,"column":0},"action":"insert","lines":["# Create Amazon ECR Repository for the Web Application","resource \"aws_ecr_repository\" \"web_application\" {","  name = \"web-application-repo\"  # Name of the repository (you can change this)","","  tags = {","    Name = \"web-application-repo\"","  }","}","","# Create Amazon ECR Repository for MySQL Image","resource \"aws_ecr_repository\" \"mysql\" {","  name = \"mysql-repo\"  # Name of the repository (you can change this)","","  tags = {","    Name = \"mysql-repo\"","  }","}",""],"id":38}]]},"ace":{"folds":[],"scrolltop":1118.5,"scrollleft":0,"selection":{"start":{"row":94,"column":0},"end":{"row":94,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":78,"state":"start","mode":"ace/mode/terraform"}},"timestamp":1738187344320,"hash":"d7cdd318090b26b97d4c7c6dbbb9a056ac7ddf22"}